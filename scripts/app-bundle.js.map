{"version":3,"sources":["src/app.js","src/environment.js","src/exercise.js","src/main.js","src/rhythm.js","src/resources/index.js","src/resources/elements/vextab.js","src/resources/value-converters/notes.js"],"names":["App","configureRouter","config","router","title","map","route","name","moduleId","fallbackRoute","debug","testing","Exercise","rhythms","configure","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","start","then","setRoot","Rhythm","of","exerciseModel","exercises","previous","index","french","count","names","notes","_exerciseModel","getExercises","res","cnt","console","log","intToBinArray","num","last","bin","toString","undefined","length","Array","from","n","Number","addExercise","exercise","push","JSON","stringify","level0","i","j","bar","k","filterByIndex","lastIndexOf","indexOf","filter","genExercises","curr","next","out","curr_mask","parseInt","join","next_mask","idx","item","parse","genLevel","level","depth","prototype","apply","activate","input","slice","model","globalResources","nextID","Vextab","Element","defaultBindingMode","twoWay","element","vexTab","vexArtist","vexFlow","id","_vexRenderer","_vexTab","_vexFlow","_vexArtist","x","y","last_y","artist","attached","Renderer","childNodes","Backends","SVG","width","customizations","parseMarkup","markup","markupChanged","staves","stave_articulations","tab_articulations","render","e","NotesValueConverter","toView"],"mappings":"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","file":"app-bundle.js","sourcesContent":["export class App {\n\n  /*\n  constructor() {\n    // Example VexTab output:\n    // tabstave clef=percussion notation=true tablature=false\n    // notes :16 E/4 :8d E/4 :8 ##-E-E/4 ^3^ :16 E-E-E-E/4 :4 ##\n  }\n  */\n\n  configureRouter(config, router) {\n    this.router = router;\n    config.title = 'Rhythm Exercises';\n    config.map([\n      {\n        route: [':index'],\n        name: 'rhythm',\n        moduleId: 'rhythm',\n      },\n    ]);\n\n    config.fallbackRoute('1');\n  }\n\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","export class Exercise {\n\n  constructor(rhythms) {\n    this.rhythms = rhythms || [];\n  }\n\n}\n","import environment from './environment';\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","import {computedFrom, Factory, inject} from 'aurelia-framework';\nimport DataRhythms from 'text!./rhythms.json';\nimport {Exercise} from 'exercise';\n\n@inject(Factory.of(Exercise))\nexport class Rhythm {\n  exercises: Array<Exercise> = [];\n\n  constructor(exerciseModel) {\n    this.rhythms = [];\n    this.previous = [];\n\n    this.index = 0;\n    this.french = '';\n    this.count = '';\n    this.names = [];\n    this.notes = [];\n\n    this.exercises = [];\n\n    this._exerciseModel = exerciseModel;\n  }\n\n  @computedFrom('index')\n  get hasPrev() {\n    return (this.index > 1);\n  }\n\n  @computedFrom('index')\n  get hasNext() {\n    return (this.rhythms && this.index < this.rhythms.length - 1);\n  }\n\n  getExercises() {\n    var res = [];\n    var cnt = 1;\n    var index = this.index;\n    console.log('getExercises', index);\n\n    var intToBinArray = function intToBinArray(num, last) {\n      var bin = (num >>> 0).toString(2);\n      if (last !== undefined) bin += last.toString();\n      while (bin.length < 4) {\n        bin = '0' + bin;\n      }\n\n      // Replace `1 with our current `index`.\n      return Array.from(bin).map(function(n) {\n        return Number(n);\n      });\n    };\n\n    var addExercise = function addExercise(exercise) {\n      if (!exercise || exercise.length === 0) return;\n\n    \tres.push(exercise);\n    \tconsole.log('exercise', cnt, JSON.stringify(exercise));\n    \tcnt++;\n    }\n\n    // Generate base set of bars.\n    var level0 = [];\n    // 4th beat Crotchet and Rest.\n    // FIXME: Add last beat after generating combinations.\n    for (var i=1; i>=0; i--) {\n    \t// Count to `111` in binary, zero-pad and append `i`.\n    \tfor (var j=0; j<8; j++) {\n        // Replace `1 with our current `index`.\n        var bar = intToBinArray(j, i).map(function(n, k) {\n          // Crotchets on the end always.\n          if (index > 1 && k < 3) {\n            return (Number(n) === 1) ? index : Number(1);\n          } else {\n            return Number(n);\n          }\n\n        });\n\n        level0.push(bar);\n      }\n    }\n\n    // Skip first and all full bars. Only do crotchets in 4th beat.\n    var filterByIndex = function filterByIndex(n) {\n      return (n.lastIndexOf(index) < 3 && n.indexOf(index) !== -1 && (n.indexOf(0) !== -1 || n.indexOf(1) !== -1));\n    };\n\n    level0 = level0.filter(filterByIndex);\n\n    console.log('level0', JSON.stringify(level0));\n\n    addExercise(level0);\n\n    var genExercises = function genExercises(curr, next) {\n      var out = [];\n\n      // FIXME: Simplier conditions if adding 4th beat afterwards.\n      var curr_mask = parseInt(curr.map(function (n, k) { return (n === index && k !== 3) ? 1 : 0; }).join(''), 2);\n      var next_mask = parseInt(next.map(function (n, k) { return (n === index && k !== 3) ? 1 : 0; }).join(''), 2);\n\n      // Find different bit set in next.\n      var idx = intToBinArray((curr_mask | next_mask));\n      for (var k=0; k<idx.length; k++) {\n        if (curr[k] === index && idx[k] === 1) {\n          idx[k] = 0;\n        }\n      }\n\n      if (idx.indexOf(1) === -1) return;\n\n      // FIXME: How to handle durations longer than 1/4?\n      for (var k=0; k<index; k++) {\n        var item = JSON.parse(JSON.stringify(curr));\n        item[idx.indexOf(1)] = k;\n        out.push(item);\n      }\n\n      return out;\n    };\n\n    var genLevel = function genLevel(level, depth) {\n    \tif (!level || depth <= 0) return;\n      depth--;\n\n    \tfor (var i=0; i<level.length; i++) {\n     \t\tvar next = (i+1 >= level.length) ? level[0] : level[i+1];\n      \tif (next.indexOf(index) === -1) continue;\n        if (level[i].lastIndexOf(0) === 3) continue;\n\n        var exercise = genExercises(level[i], next);\n\n        // Add matching patterns with different 4th beat.\n        if (exercise && level[i+(level.length/2)]) {\n          Array.prototype.push.apply(exercise, genExercises(level[i+(level.length/2)], next));\n        }\n\n        // Skip if only contains original.\n        if (exercise && exercise.length < 2) continue;\n        addExercise(exercise);\n\n        // Recurse and generate exercises from each.\n        genLevel(exercise, depth);\n      }\n    };\n\n    genLevel(level0, 2);\n\n    return res;\n  }\n\n  activate(input) {\n    if (!input) return;\n\n    var index = Number(input.index) || 1;\n    this.rhythms = JSON.parse(DataRhythms);\n    var item = this.rhythms[index];\n    if (!item) return;\n\n    // Previous, including current.\n    // We only show rhythms which were learnt in previous pages.\n    this.previous = this.rhythms.slice(0, index+1);\n\n    this.index = index;\n    this.french = item.french;\n    this.count = item.count;\n    this.names = item.names;\n    this.notes = item.notes;\n\n    var model = this._exerciseModel;\n    this.exercises = this.getExercises().map(function (exercise) {\n      return model(exercise);\n    });\n\n  }\n\n}\n","export function configure(config) {\n  config.globalResources([\n    './elements/vextab',\n    './value-converters/notes',\n  ]);\n}\n","import {bindingMode, observable} from 'aurelia-binding';\nimport {bindable} from 'aurelia-templating';\nimport {inject} from 'aurelia-dependency-injection';\nimport {DOM} from 'aurelia-pal';\nimport {VexTab, Artist, Flow} from 'vextab';\n\nlet nextID = 0;\n\n@inject(Element, VexTab, Artist, Flow)\nexport class Vextab {\n  @bindable({ defaultBindingMode: bindingMode.twoWay }) markup;\n  @bindable width = 400;\n  id = nextID++;\n\n  constructor(element, vexTab, vexArtist, vexFlow) {\n    this.element = element;\n\n    this._vexRenderer;\n    this._vexTab = vexTab;\n    this._vexFlow = vexFlow;\n    this._vexArtist = vexArtist;\n    this._vexArtist.x = 10;\n    this._vexArtist.y = 10;\n    this._vexArtist.last_y = 10;\n    this._vexTab.artist = this._vexArtist;\n  }\n\n  attached() {\n    this._vexRenderer = new this._vexFlow.Renderer(this.element.childNodes[0], this._vexFlow.Renderer.Backends.SVG);\n    this._vexArtist.width = this.width;\n    this._vexArtist.customizations.width = this.width;\n    this.parseMarkup(this.markup);\n  }\n\n  markupChanged() {\n    this.parseMarkup(this.markup);\n  }\n\n  parseMarkup(markup) {\n    if (!markup || !this._vexRenderer) return;\n\n    markup = 'tabstave clef=none notation=true tablature=false\\nnotes ' + markup;\n\n    // Reset Artist state as we're using the same instance.\n    this._vexArtist.last_y = 10;\n    this._vexArtist.staves = [];\n    this._vexArtist.stave_articulations = [];\n    this._vexArtist.tab_articulations = [];\n\n    try {\n      // Parse VexTab music notation passed in as a string.\n      this._vexTab.parse(markup);\n\n      // Render notation onto canvas.\n      this._vexArtist.render(this._vexRenderer);\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n}\n","// tabstave clef=percussion notation=true tablature=false\n// notes $$$\n\n//import numbro from 'numbro';\nimport DataRhythms from 'text!../../rhythms.json';\n\nexport class NotesValueConverter {\n  constructor() {\n    this.rhythms = JSON.parse(DataRhythms);\n  }\n\n  toView(notes, index = 0) {\n    var res = '';\n    for (var i = 0; i < notes.length; i++) {\n      if (res) res += ' ';\n\n      // TODO: Handle multiple notes definitions. When to switch?\n      res += this.rhythms[notes[i]].notes[index];\n    }\n\n    return res;\n  }\n}\n"],"sourceRoot":".."}